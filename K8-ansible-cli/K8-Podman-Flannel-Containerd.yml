---
- name: Kubernetes Cluster Setup with containerd and Flannel (RHEL 9)
  hosts: rhel9k8s
  become: true
  vars:
    pod_network_cidr: "10.216.0.0/16"
    is_master: "{{ inventory_hostname == groups['master'][0] }}"

  tasks:
    - name: Enable BaseOS repository
      ansible.builtin.command: >
        subscription-manager repos --enable=rhel-9-for-x86_64-baseos-rpms
      register: enable_baseos
      changed_when: "'is enabled for this system' in enable_baseos.stdout"
      failed_when: enable_baseos.rc != 0 and 'is enabled for this system' not in enable_baseos.stdout

    - name: Enable AppStream repository
      ansible.builtin.command: >
        subscription-manager repos --enable=rhel-9-for-x86_64-appstream-rpms
      register: enable_appstream
      changed_when: "'is enabled for this system' in enable_appstream.stdout"
      failed_when: enable_appstream.rc != 0 and 'is enabled for this system' not in enable_appstream.stdout

#    - name: Enable container-tools module
#      ansible.builtin.command: dnf module enable -y container-tools
#      changed_when: true

    - name: Install container tools and base packages
      ansible.builtin.dnf:
        name:
          - podman
          - buildah
          - skopeo
          - epel-release
        state: present

    - name: Install containerd
      ansible.builtin.dnf:
        name: containerd
        state: present

    - name: Generate default containerd config
      ansible.builtin.command: containerd config default
      register: containerd_config
      changed_when: false

    - name: Write containerd config file
      ansible.builtin.copy:
        content: "{{ containerd_config.stdout }}"
        dest: /etc/containerd/config.toml
        mode: '0644'

    - name: Enable systemd cgroup driver for containerd
      ansible.builtin.replace:
        path: /etc/containerd/config.toml
        regexp: '^(\s*)SystemdCgroup = false'
        replace: '\1SystemdCgroup = true'

    - name: Enable and start containerd
      ansible.builtin.systemd:
        name: containerd
        enabled: true
        state: restarted
        daemon_reload: true

    - name: Disable SELinux
      ansible.posix.selinux:
        state: disabled

    - name: Disable swap at runtime
      ansible.builtin.command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Disable swap in fstab
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '^([^#].*swap.*)$'
        replace: '# \1'

    - name: Add Kubernetes repository
      ansible.builtin.yum_repository:
        name: kubernetes
        description: Kubernetes repo
        baseurl: https://pkgs.k8s.io/core:/stable:/v1.29/rpm/
        gpgcheck: true
        repo_gpgcheck: true
        gpgkey: https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repodata/repomd.xml.key
        enabled: true

    - name: Install Kubernetes components
      ansible.builtin.dnf:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Enable kubelet service
      ansible.builtin.systemd:
        name: kubelet
        enabled: true
        state: stopped

- name: Initialize Kubernetes Master Node
  hosts: k8smasters
  become: true
  vars:
    pod_network_cidr: "10.216.0.0/16"

  tasks:
    - name: Check if Kubernetes is already initialized
      ansible.builtin.stat:
        path: /etc/kubernetes/admin.conf
      register: k8s_initialized

    - name: Initialize cluster (only if not initialized)
      ansible.builtin.command: kubeadm init --pod-network-cidr={{ pod_network_cidr }}
      when: not k8s_initialized.stat.exists
      register: kubeadm_output
      changed_when: true

    - name: Save kubeadm join command to file
      ansible.builtin.shell: kubeadm token create --print-join-command > /root/kubeadm_join.sh
      when: not k8s_initialized.stat.exists

    - name: Setup kubectl config for root
      ansible.builtin.shell: |
        mkdir -p $HOME/.kube
        cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        chown $(id -u):$(id -g) $HOME/.kube/config
      args:
        executable: /bin/bash
      when: not k8s_initialized.stat.exists

    - name: Deploy Flannel CNI
      ansible.builtin.shell: |
        kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
      args:
        executable: /bin/bash
      when: not k8s_initialized.stat.exists

    - name: Read kubeadm join command
      ansible.builtin.slurp:
        src: /root/kubeadm_join.sh
      register: join_command_script
      when: k8s_initialized.stat.exists or kubeadm_output.changed
      delegate_to: k8smasters

- name: Join Worker Nodes to the Cluster
  hosts: k8sworkers
  become: true
  vars:
    join_command: "{{ join_command_script.content | b64decode | trim }}"
  tasks:
    - name: Join node to cluster
      ansible.builtin.shell: "{{ join_command }}"
      args:
        creates: /etc/kubernetes/kubelet.conf
