---
- name: Deploy and validate an NGINX application in Kubernetes
  hosts: k8smasters
  become: yes
  gather_facts: false
  vars:
    ansible_python_interpreter:/usr/bin/python3

  tasks:
    - name: Ensure the app namespace exists
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: my-nginx-app
        state: present

    - name: Deploy the NGINX application deployment
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: nginx-deployment
            namespace: my-nginx-app
          spec:
            replicas: 3
            selector:
              matchLabels:
                app: nginx
            template:
              metadata:
                labels:
                  app: nginx
              spec:
                containers:
                  - name: nginx
                    image: nginx:1.24
                    ports:
                      - containerPort: 80

    - name: Expose the NGINX deployment with a LoadBalancer service
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: nginx-service
            namespace: my-nginx-app
          spec:
            selector:
              app: nginx
            ports:
              - protocol: TCP
                port: 80
                targetPort: 80
            type: LoadBalancer

    - name: Wait for NGINX pods to be scheduled and running
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: my-nginx-app
        label_selectors:
          - app=nginx
      register: nginx_pods
      retries: 10
      delay: 5
      until: >
        nginx_pods.resources | length == 3 and
        (nginx_pods.resources | map(attribute='status.phase') | list | unique) == ['Running']

    - name: Confirm all NGINX pods are running
      assert:
        that:
          - nginx_pods.resources | length == 3
          - nginx_pods.resources | map(attribute='status.phase') | list | unique == ['Running']
        fail_msg: "❌ Not all NGINX pods are running as expected."
        success_msg: "✅ All NGINX pods are running successfully."

    - name: Retrieve NGINX service details
      kubernetes.core.k8s_info:
        kind: Service
        namespace: my-nginx-app
        name: nginx-service
      register: svc_info

    - name: Show NGINX service IP
      debug:
        msg: >
          NGINX Service IP: {{
            svc_info.resources[0].status.loadBalancer.ingress[0].ip
              if svc_info.resources[0].status.loadBalancer.ingress is defined
              else svc_info.resources[0].spec.clusterIP
          }}
