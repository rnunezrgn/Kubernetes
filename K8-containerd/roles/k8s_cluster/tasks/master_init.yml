---
# Kubernetes Control Plane Initialization
- name: Check if cluster already initialized
  ansible.builtin.stat:
    path: /etc/kubernetes/admin.conf
  register: k8s_initialized

- name: Initialize Kubernetes cluster
  command: kubeadm init --pod-network-cidr={{ pod_network_cidr }}
  when: not k8s_initialized.stat.exists
  register: kubeadm_output

- name: Setup kubeconfig for root
  ansible.builtin.shell: |
    mkdir -p /root/.kube
    cp -i /etc/kubernetes/admin.conf /root/.kube/config
    chown root:root /root/.kube/config
  when: not k8s_initialized.stat.exists

- name: Setup kubeconfig for ec2-user
  become_user: ec2-user
  ansible.builtin.shell: |
    mkdir -p /home/ec2-user/.kube
    cp /etc/kubernetes/admin.conf /home/ec2-user/.kube/config
    chown ec2-user:ec2-user /home/ec2-user/.kube/config
  when: not k8s_initialized.stat.exists

- name: Deploy Flannel CNI
  ansible.builtin.shell: |
    kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
  when: not k8s_initialized.stat.exists

- name: Wait for Flannel pods to be running on all nodes
  shell: |
    kubectl get pods -n kube-system -l app=flannel --no-headers | grep -v Running && exit 1 || exit 0
  register: flannel_ready
  retries: 10
  delay: 10
  until: flannel_ready.rc == 0
  when: not k8s_initialized.stat.exists

- name: Wait for Kubernetes API to become available
  ansible.builtin.uri:
    url: https://localhost:6443/healthz
    method: GET
    status_code: 200
    validate_certs: false
  register: result
  until: result.status == 200
  retries: 10
  delay: 10

- name: Upload certificate key (for control-plane join if needed)
  ansible.builtin.shell: kubeadm init phase upload-certs --upload-certs
  register: cert_key_output
  when: not k8s_initialized.stat.exists
  changed_when: false

- name: Generate kubeadm join command with cert key
  ansible.builtin.shell: |
    kubeadm token create --print-join-command --certificate-key {{ cert_key_output.stdout_lines[-1] }}
  register: join_cmd
  when: not k8s_initialized.stat.exists

- name: Get join command from control plane
  ansible.builtin.command: kubeadm token create --print-join-command
  register: join_cmd
  changed_when: false

- name: Set join command fact
  ansible.builtin.set_fact:
    join_command: "{{ join_cmd.stdout }}"
