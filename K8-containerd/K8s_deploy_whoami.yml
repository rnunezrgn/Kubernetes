---
- name: Deploy and test whoami application
  hosts: k8smasters
  become: yes
  vars:
    whoami_port: 31000

  tasks:
    - name: Copy whoami manifest to control plane
      copy:
      #  src: files/whoami.yaml
        dest: /tmp/whoami.yaml
        mode: '0644'
        content: |
          # HELLO-WORLD
          ---
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: hello-world
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: hello-world
            template:
              metadata:
                labels:
                  app: hello-world
              spec:
                tolerations:
                - key: "node-role.kubernetes.io/control-plane"
                  operator: "Exists"
                  effect: "NoSchedule"
                containers:
                - name: hello-world
                  image: hashicorp/http-echo
                  args:
                    - "-text=Hello Kubernetes!"
                  ports:
                  - containerPort: 5678
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: hello-world
          spec:
            type: NodePort
            selector:
              app: hello-world
            ports:
            - port: 5678
              targetPort: 5678
              nodePort: 30567

    - name: Apply whoami manifest
      command: kubectl apply -f /tmp/whoami.yaml

    - name: Wait for whoami pod to be ready
      shell: |
        kubectl get pods -l app=whoami -o jsonpath='{.items[0].status.containerStatuses[0].ready}'
      register: pod_ready
      retries: 10
      delay: 5
      until: pod_ready.stdout == "true"

    - name: Get internal node IP
      shell: kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}'
      register: node_ip

    - name: Test access to whoami service
      uri:
        url: "http://{{ node_ip.stdout }}:{{ whoami_port }}"
        return_content: yes
      register: whoami_response

    - name: Show whoami response
      debug:
        var: whoami_response.content
